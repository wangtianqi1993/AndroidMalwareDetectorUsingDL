java.lang.Thread.start 主线程开始执行
java.util.zip.ZipFile.getEntry 解压文件
android.content.ContentResolver.query 获取手机联系人信息
libcore.io.Posix.open SD卡相关操作
libcore.io.Posix.close SD卡相关操作
sendTextMessage 发送短信
android.telephony.TelephonyManager.getDeviceId 获取设备ID号
getUidTxBytes 获取流量计数
android.app.SharedPreferencesImpl$EditorImpl.putString 数据存储
java.net.URLEncoder.encode URL编码
android.net.ConnectivityManager.getNetworkInfo 获取网络信息
android.telephony.TelephonyManager.getNetworkOperator　操作网络设备
android.widget.TextView.setText 显示字符
android.app.SharedPreferencesImpl$EditorImpl.putString 存储字符
android.telephony.TelephonyManager.getNetworkOperator 获取网络操作
2. 8EC642A4165538C34BB366B3F188D0A8.apk
java.lang.Thread.start 主线程开始执行
java.lang.Class.getMethod 通过反射获得方法
java.lang.Class.getConstructor 通过反射获取构造方法
android.widget.TextView.setText 向TextView中添加内容
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
java.lang.Thread.start 启动线程
libcore.io.Posix.open 打开文件
android.content.ContentResolver.regist erContentObserver 监控数据
android.app.SharedPreferencesImp l$EditorImpl.putString 插入字符串
method":"libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
android.content.ContentResolver.registerContentOb server 监控数据
android.content.ContentResolver.registerContentOb server 监控短信
android.content.ContentResolver.registerContentOb server 监控数据
android.telephony.SmsManager.sendTextMessage 发送短信
java.util.zip.ZipFile.getInputStream 解压文件
3. 51.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
libcore.io.Posix.open 打开文件
android.content.ContentResolver.registerContentOb server 监控数据
android.content.ContentResolver.registerContentOb server 监控短信
java.lang.Class.getMethod 通过反射获取方法
java.lang.Class.getConstructor 通过反射获取构造方法
android.app.admin.DevicePolicyManager.isAdminActive 监控设备是否激活
android.telephony.TelephonyManager.getNetworkOperator 获取目前注册网络的MCC+MNC
libcore.io.Posix.open 打开文件
java.lang.Thread.start 启动线程
java.net.URLEncoder.encode 对URL编码
4. 51_secapk.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
android.content.ContentResolver.registerContentObserver 监控数据
android.content.ContentResolver.registerContentOb server 监控短信
java.lang.Class.getConstructor 通过反射获取构造方法
android.app.admin.DevicePolicyManager.isAdminActive 监控设备是否激活
java.lang.Thread.start 启动线程
libcore.io.Posix.open 打开文件
android.app.admin.DeviceAdminReceiver.onReceive 激活设备管理器
5. 29416F61F6EF4B058DA317F7C53AFB4B.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
javax.crypto.Cipher.doFinal CRYPT加密解密
java.lang.Class.getConstructor 通过反射获取构造方法
java.lang.Thread.start 启动线程
android.telephony.TelephonyManager.getDeviceId 获取IMEI
java.lang.Thread.start 启动线程
android.app.SharedPreferencesImpl$EditorImpl.putString 插入字符串
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
libcore.io.Posix.rename 文件重命名
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
android.preference.PreferenceScreen 通过反射获取构造方法
android.app.SharedPreferencesImpl$EditorImpl.pu tString 插入字符串
java.lang.Class.getConstructor 通过反射获取构造方法
java.lang.Thread.start 启动线程
libcore.io.Posix.rename 文件重命名
libcore.io.Posix.open 打开文件
android.widget.TextView.setText 向TextView中添加内容
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
libcore.io.Posix.remove 删除文件
java.lang.Thread.start 启动线程
android.app.SharedPreferencesImpl$EditorImp l.putString 插入字符串
libcore.io.Posix.rename 文件重命名
6. 8181555CA17945AC86DEE1A247CFCA9F.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.Class.getConstructor 通过反射获取构造方法
java.util.zip.ZipFile.getInputStream 解压文件
java.util.zip.ZipFile.getEntry 进入ZipFile文件目录
android.widget.TextView.setText 向TextView中添加内容
java.lang.Thread.start 启动线程
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
libcore.io.Posix.open 打开文件
android.telephony.TelephonyManager.getDeviceId 获取IMEI
java.net.URLEncoder.encode 对URL编码
7. A05F987EBE49DAFEF600CAFBE27BE5DE.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
javax.crypto.Cipher.doFinal CRYPT加密解密
android.telephony.TelephonyManager.getDeviceId 获取IMEI
android.app.SharedPreferencesI mpl$EditorImpl.putString 插入字符串
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
libcore.io.Posix.rename 文件重命名
java.lang.Class.getConstructor 通过反射获取构造方法
android.app.SharedPreferencesImpl$EditorImpl.putString 插入字符串
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
android.content.ContentResolver.regist erContentObserver 监控数据
android.app.SharedPreferencesImpl$Edito rImpl.putString 插入字符串
libcore.io.Posix.rename 文件重命名
com.android.server.pm.PackageManagerService.setComponentEnabledSetting 隐藏图标
android.util.Base64.encode Encode解密
8. AD94B3AAA9CE3598B02F30940D745EA3.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过反射调用方法
android.telephony.TelephonyManager.getDeviceId 获取IMEI
android.widget.TextView.setText 向TextView中添加内容
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
libcore.io.Posix.rename 文件重命名
9. B2BDB9C35BF55F5D9E79326D58AB68B5.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
java.lang.Thread.start 启动线程
android.telephony.TelephonyManager.getDeviceId 获取IMEI
java.lang.reflect.Method.invoke 通过 射调用方法
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
android.util.Base64.encode Encode解密
android.widget.TextView.setText 向TextView中添加内容
10. backupme.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
libcore.io.Posix.open 打开文件
android.widget.TextView.setText 向TextView中添加内容
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
android.telephony.TelephonyManager.getDeviceId 获取IMEI
java.net.URLEncoder.encode 对URL编码
11. com.android.im.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
java.lang.Class.getConstructor 通过反射获取构造方法
android.widget.TextView.setText 向TextView中添加内容
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
libcore.io.Posix.open 打开文件
android.app.SharedPreferencesImpl$EditorImp l.putString 插入字符串
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
libcore.io.Posix.open 打开文件
java.util.zip.ZipFile.entries 进入ZipFile文件全部目录
java.util.zip.ZipFile.getInputStream 解压文件
android.content.ContentResolver.registerContentObserver 监控数据
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
android.app.admin.DevicePolicyManager.isAdminActive 监控设备是否激活
android.content.ContentResolver.registerContentObserver 监控短信
android.content.ContentResolver.registerContentOb server 监控数据
12. dwb.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
libcore.io.Posix.open 打开文件
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
android.content.ContentResolver.query 获取手机联系人
libcore.io.Posix.remove 删除文件
android.telephony.TelephonyManager.getDeviceId 获取IMEI
android.app.SharedPreferencesImpl$EditorImpl.putString 插入字符串
java.net.URLEncoder.encode 对URL编码
android.telephony.TelephonyManager.getNetworkOperator 获取目前注册网络的MCC+MNC
android.widget.TextView.setText 向TextView中添加内容
android.net.ConnectivityManager.getNetworkInfo 获取网络连接信息
libcore.io.Posix.rename 文件重命名
13. dwbysb_guide
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
libcore.io.Posix.open 打开文件
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
android.view.WindowManagerImpl.addView 监控浮动窗口，窗口置顶
libcore.io.Posix.open 打开文件
libcore.io.Posix.remove 删除文件
android.net.ConnectivityManager.getNetworkInfo 获取网络连接信息
java.util.zip.ZipFile.entries 进入ZipFile文件全部目录
14. upload_audio.apk
java.lang.Thread.start 启动线程
java.lang.Class.getMethod 通过反射获取方法
java.lang.reflect.Method.invoke 通过 射调用方法
android.app.admin.DevicePolicyManager.isAdminActive 监控设备是否激活
libcore.io.Posix.open 打开文件
libcore.io.Posix.rename 文件重命名
java.util.zip.ZipFile.getEntry 进入ZipFile文件单个目录
android.widget.TextView.setText 向TextView中添加内容
