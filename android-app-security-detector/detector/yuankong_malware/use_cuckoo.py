# !/usr/bin/env python
# -*- coding:utf-8 -*-
__author__ = 'wtq'

import os
import sys
import time
import json
import subprocess

muma_sensitive_per = ["WRITE_CONTACTS", "RECEIVE_SMS", "READ_CONTACTS", "PROCESS_OUTGOING_CALLS","READ_SMS"
                      ,"SEND_SMS", "MODIFY_PHONE_STATE", "READ_CALL_LOG", "REBOOT", "RECEIVE_BOOT_COMPLETED",
                      "CHANGE_NETWORK_STATE"]


def merage_hook_feature(feature_path):
    """

    :return:
    """
    feature_dict = {}
    with open(feature_path) as f:
        lines = f.readlines()
        for line in lines:
            if "apk" not in line.strip():
                action = line.split(" ")
                if len(action) == 2:
                    action = action[1]
                    if action not in feature_dict:
                        feature_dict[action] = 0
                    feature_dict[action] += 1

    sort_feature = sorted(feature_dict.items(), key=lambda d:d[1], reverse=True)
    for item in sort_feature:
        print item[0], item[1]


def use_cuckoo(apk_path):
    """
    extract feature a["static_method_calls"]["permissions_method_calls"][every permissions]
    :param apk_path:
    :return:
    """
    execute_cuckoo = "python /home/wtq/develop/workspace/github/cuckoo-droid/utils/submit.py" \
                  " --package apk "
    for p_apk in os.listdir(apk_path):
        path = os.path.join(apk_path, p_apk)
        cmd = execute_cuckoo + path
        ps = subprocess.Popen(cmd, shell=True)
        ps.wait()
        time.sleep(2)


def analyse_cuckoo_report(apk_path):
    """
    分析cuckoo-droid中分析的权限信息，并将权限对应的action信息提取出来
    :param apk_path:
    :return:
    """
    report_index = set([str(72+i) for i in range(0, 25)])

    permission_to_action = {}
    with open("feature/permission_to_action.json", 'r') as f:
        p_to_a = json.load(f, encoding="utf-8")
    print p_to_a
    for report in os.listdir(apk_path):
        if report in report_index:
            path1 = os.path.join(apk_path, report)
            path2 = os.path.join(path1, "reports/report.json")
            with open(path2, 'r') as f:
                report_json = json.load(f, encoding="utf-8")
            # print report
            app_name = report_json[unicode("target", 'utf-8')][unicode("file", "utf-8")][unicode("name", 'utf-8')]
            permission_to_action[app_name] = []
            permissions = []
            actions = []
            for permission in report_json[unicode("apkinfo", "utf-8")][unicode("static_method_calls", "utf-8")][unicode("permissions_method_calls", "utf-8")]:
                if permission in p_to_a:
                    permissions.append(permission)
                    actions.append(p_to_a[permission])

            muma_apk_point(permissions)
    #         permission_to_action[app_name].append(permissions)
    #         permission_to_action[app_name].append(actions)
    #
    # with open("feature/benign_permission.json", "w") as f:
    #     json.dump(permission_to_action, f)
    #
    # for item in permission_to_action:
    #     for index in range(len(permission_to_action[item][0])):
    #         print permission_to_action[item][0][index], permission_to_action[item][1][index]
    #     print '\n'

def muma_apk_point(permissions):
    """
    普通权限->普通权限：1分
    敏感权限->普通权限: 3分
    普通权限->敏感权限: 5分
    敏感权限->敏感权限: 7分
    :param permissions:
    :return:
    """
    point = 0
    trace = ""
    for index in range(len(permissions)-1):
        if permissions[index] not in muma_sensitive_per and permissions[index+1] not in muma_sensitive_per:
            point += 1
            trace += "1->"
        if permissions[index] in muma_sensitive_per and permissions[index+1] not in muma_sensitive_per:
            point += 3
            trace += "3->"
        if permissions[index] not in muma_sensitive_per and permissions[index+1] in muma_sensitive_per:
            point += 5
            trace += "5->"
        if permissions[index] in muma_sensitive_per and permissions[index+1] in muma_sensitive_per:
            point += 7
            trace += "7->"
    if len(permissions) > 0:
        print float(point)/len(permissions), trace

if __name__ == "__main__":
    # use_cuckoo("/home/wtq/develop/workspace/mumaTrainApk/formal_analyse")
    analyse_cuckoo_report("/home/wtq/develop/workspace/github/cuckoo-droid/storage/analyses")
    # merage_hook_feature("/home/wtq/develop/workspace/gitlab/android-app-security-detector/detector/yuankong_malware/feature/hook_feature/merge_feature.txt")
