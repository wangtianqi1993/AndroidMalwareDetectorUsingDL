# !/use/bin/env python
# -*- coding:utf-8 -*-

__author__ = 'wtq'

import json
import urllib, urllib2
from BeautifulSoup import BeautifulSoup
from phone import Phone
from pprint import pprint
from detector.config import ID_CARD_PATH
from detector.config import BANK_CARD_PATH
from detector.config import TELE_AREA_PATH
from detector.config import APK_INFO_PATH
from trace_util.check_id import check_id


class TraceMalware:

    def get_source_place(self, result_path):
        """

        :param result_path:
        :return:
        """
        try:
            with open(result_path, 'r') as fp:
                apk_info = json.load(fp)
        except Exception, e:
            print "can not open the file!"
            return

        p = Phone()
        for apk_name in apk_info:

            # apk中的移动电话归属地查询
            if "mobilephone" in apk_info[apk_name]:
                print "apk_name", apk_name
                for phone_number in apk_info[apk_name]["mobilephone"]:
                    # print phone_number
                    p_source_info = p.find(phone_number)
                    if type(p_source_info) is dict:
                        print phone_number
                        for p_info in p_source_info:
                            print p_info, p_source_info[p_info]

            # apk 中的银行卡信息查询
            if "bank_card" in apk_info[apk_name]:
                for bank_card in apk_info[apk_name]["bank_card"]:
                    bank_info = self.get_bank_card_info(bank_card)
                    if bank_info:
                        print bank_card
                        for key in bank_info:
                            print key, bank_info[key]

            # apk中固定电话归属地查询
            if "telephone" in apk_info[apk_name]:
                for tele_id in apk_info[apk_name]["telephone"]:
                    if tele_id is None or len(tele_id)<10:
                        continue
                    tele_area = self.get_tele_num_place(tele_id[:4])
                    print tele_id, tele_area

            # apk中身份证号的归属地查询
            if "id_card" in apk_info[apk_name]:
                for id in apk_info[apk_name]["id_card"]:
                    id_result = self.get_id_card_place(id)
                    print id, id_result

    def get_society_info(self, queryword):
        q=lambda x: urllib.quote(x.decode('gbk').encode('utf8'))

        url="http://shegongku.org/passwd/index.php/Index/search/key/%s/vcode/"
        req=urllib2.Request(url%q(queryword))

        req.add_header("User-Agent",r"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/33.0.1750.146 Safari/537.36")
        req.add_header("X-Requested-With",r'XMLHttpRequest')

        res=urllib2.urlopen(req)
        dom=BeautifulSoup(res.read())

        table=dom.find("table")
        trs=table.findAll("tr")
        for tr in trs[2:]:
            print tr.text

    def get_id_card_place(self, id_card):
        """
        对身份证号的合法性做判别，并给出归属地
        :param id_card:
        :return:
        """
        result = check_id(id_card)
        if result:
            return result

    def get_bank_card_info(self, bank_card):
        """
        银行卡号的相关信息查询
        :param bank_card:
        :return:
        """
        result = {}
        if bank_card is None or len(bank_card) < 6:
            return None

        bank_id = bank_card[0:6]
        with open(BANK_CARD_PATH, 'r') as f:
            bank_store = json.load(f)
            for item in bank_store:
                if item["bin"] == bank_id:
                    result['card_name'] = item["cardName"]
                    result["bank_name"] = item["bankName"]
        return result

    def get_tele_num_place(self, tele_num):
        """
        对固定电话所属的地域查询
        :param tele_num:
        :return:
        """
        if tele_num is None or len(tele_num) !=4:
            return None
        with open(TELE_AREA_PATH, "r") as f:
            tele_info = json.load(f)
            if tele_num in tele_info:
                area = tele_info[tele_num]
                return area

if __name__ == "__main__":
    trace_malware = TraceMalware()
    # trace_malware.get_source_place(APK_INFO_PATH)
    trace_malware.get_bank_card_info("621098232323243453")
    trace_malware.get_tele_num_place("0412")
