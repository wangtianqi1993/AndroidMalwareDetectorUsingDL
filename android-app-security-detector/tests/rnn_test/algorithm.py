# !/usr/bin/env python
# -*- coding: utf-8 -*-
__author__ = 'wtq'


class TreeNode:
    def __init__(self, x):
        self.val = x
        self.left = None
        self.right = None

class Solution:
    def Convert(self, pRootOfTree):
        if pRootOfTree is None:
            return

        is_first = None
        p = pRootOfTree
        stack = []
        while p or len(stack):
            while p:
                stack.append(p)
                p = p.left
            p = stack.pop()

            if is_first:
                pRootOfTree = p
                is_first = None
                pre = p

            else:
                p.left = pre
                pre.right = p
                pre = p

            p = p.right
        return pRootOfTree


